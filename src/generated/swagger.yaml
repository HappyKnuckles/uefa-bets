openapi: 3.0.1
info:
  title: Check24.Api
  version: '1.0'
paths:
  /api/Bet:
    get:
      tags:
        - Bet
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bet'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bet'
    post:
      tags:
        - Bet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bet'
          text/json:
            schema:
              $ref: '#/components/schemas/Bet'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bet'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Bet'
            application/json:
              schema:
                $ref: '#/components/schemas/Bet'
            text/json:
              schema:
                $ref: '#/components/schemas/Bet'
    put:
      tags:
        - Bet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bet'
          text/json:
            schema:
              $ref: '#/components/schemas/Bet'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bet'
      responses:
        '200':
          description: Success
  /api/Bet/{id}:
    delete:
      tags:
        - Bet
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /api/Bet/place-bet:
    post:
      tags:
        - Bet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BetInputModel'
          text/json:
            schema:
              $ref: '#/components/schemas/BetInputModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BetInputModel'
      responses:
        '200':
          description: Success
  /api/Community:
    get:
      tags:
        - Community
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Community'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Community'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Community'
    post:
      tags:
        - Community
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Community'
          text/json:
            schema:
              $ref: '#/components/schemas/Community'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Community'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Community'
            application/json:
              schema:
                $ref: '#/components/schemas/Community'
            text/json:
              schema:
                $ref: '#/components/schemas/Community'
    put:
      tags:
        - Community
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Community'
          text/json:
            schema:
              $ref: '#/components/schemas/Community'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Community'
      responses:
        '200':
          description: Success
  /api/Community/{id}:
    delete:
      tags:
        - Community
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /api/Community/join-community:
    post:
      tags:
        - Community
      parameters:
        - name: userId
          in: query
          style: form
          schema:
            type: string
            format: uuid
        - name: communityId
          in: query
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /api/Community/{communityId}/points:
    put:
      tags:
        - Community
      parameters:
        - name: communityId
          in: path
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Community'
          text/json:
            schema:
              $ref: '#/components/schemas/Community'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Community'
      responses:
        '200':
          description: Success
  /api/Community/{communityId}/ranking:
    get:
      tags:
        - Community
      parameters:
        - name: communityId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/Game:
    get:
      tags:
        - Game
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
    post:
      tags:
        - Game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
          text/json:
            schema:
              $ref: '#/components/schemas/Game'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Game'
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
            text/json:
              schema:
                $ref: '#/components/schemas/Game'
    put:
      tags:
        - Game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
          text/json:
            schema:
              $ref: '#/components/schemas/Game'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          description: Success
  /api/Game/{id}:
    delete:
      tags:
        - Game
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/User:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    put:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          text/json:
            schema:
              $ref: '#/components/schemas/User'
          application/*+json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Success
  /api/User/{id}:
    delete:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /api/User/login:
    get:
      tags:
        - User
      parameters:
        - name: userName
          in: query
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/User/{UserId}/rank:
    get:
      tags:
        - User
      parameters:
        - name: userName
          in: query
          style: form
          schema:
            type: string
        - name: UserId
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/User/get-leaderboard:
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/UserCommunity/show-user-communities:
    get:
      tags:
        - UserCommunity
      parameters:
        - name: userId
          in: query
          style: form
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCommunity'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCommunity'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCommunity'
  /api/UserCommunity:
    post:
      tags:
        - UserCommunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCommunity'
          text/json:
            schema:
              $ref: '#/components/schemas/UserCommunity'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserCommunity'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserCommunity'
            application/json:
              schema:
                $ref: '#/components/schemas/UserCommunity'
            text/json:
              schema:
                $ref: '#/components/schemas/UserCommunity'
    get:
      tags:
        - UserCommunity
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCommunity'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCommunity'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCommunity'
    put:
      tags:
        - UserCommunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCommunity'
          text/json:
            schema:
              $ref: '#/components/schemas/UserCommunity'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserCommunity'
      responses:
        '200':
          description: Success
  /api/UserCommunity/{id}:
    delete:
      tags:
        - UserCommunity
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
components:
  schemas:
    Bet:
      type: object
      properties:
        betId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        gameId:
          type: integer
          format: int32
        homeTeamGoals:
          type: integer
          format: int32
          nullable: true
        awayTeamGoals:
          type: integer
          format: int32
          nullable: true
        betTimestamp:
          type: string
          format: date-time
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        game:
          $ref: '#/components/schemas/Game'
      additionalProperties: false
    BetInputModel:
      type: object
      properties:
        game:
          $ref: '#/components/schemas/Game'
        bet:
          $ref: '#/components/schemas/Bet'
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
    Community:
      type: object
      properties:
        communityId:
          type: string
          format: uuid
        communityName:
          type: string
          nullable: true
        communityPoints:
          type: integer
          format: int32
        userCommunities:
          type: array
          items:
            $ref: '#/components/schemas/UserCommunity'
          nullable: true
      additionalProperties: false
    Game:
      type: object
      properties:
        teamHomeName:
          type: string
          nullable: true
        teamAwayName:
          type: string
          nullable: true
        gameStartsAt:
          type: string
          format: date-time
        teamAwayGoals:
          type: integer
          format: int32
          nullable: true
        teamHomeGoals:
          type: integer
          format: int32
          nullable: true
        gameId:
          type: integer
          format: int32
        gameStatus:
          type: string
          nullable: true
        bets:
          type: array
          items:
            $ref: '#/components/schemas/Bet'
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        username:
          type: string
          nullable: true
        points:
          type: integer
          format: int32
          nullable: true
        registrationDate:
          type: string
          format: date-time
        bets:
          type: array
          items:
            $ref: '#/components/schemas/Bet'
          nullable: true
        userCommunities:
          type: array
          items:
            $ref: '#/components/schemas/UserCommunity'
          nullable: true
      additionalProperties: false
    UserCommunity:
      type: object
      properties:
        userCommunityId:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
          nullable: true
        communityId:
          type: string
          format: uuid
          nullable: true
        community:
          $ref: '#/components/schemas/Community'
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
